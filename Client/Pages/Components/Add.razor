@page "/solutions/{SolutionId}/components/add"
@using Project.Track.Shared.Components
@using Project.Track.Shared.Features
@layout SolutionLayout

@inject HttpClient _httpClient;
@inject NavigationManager _navigationManager;

<h3>Add Component</h3>
<hr/>

<EditForm Model="@_model" OnValidSubmit="@HandleValidSubmit" class='form'>
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <InputText id="name" class="form-control" @bind-Value="_model.Name" />
    </div>
    
    <div class="mb-3">
        <label for="feature" class="form-label">Feature</label>
        
        <InputSelect class="form-select"  @bind-Value='_model.FeatureId'>
            @if (_features.Any())
            {
                foreach (var (id, name, _) in _features)
                {
                    <option value='@id'>@name</option>
                }
            }
        </InputSelect>
    </div>

    <button  class="btn btn-primary" type="submit">Submit</button>
</EditForm>


@code {
    [Parameter]
    public string SolutionId { get; set; }
    
    readonly ComponentModel _model = new();
    List<GetFeatureModel> _features = new();

    protected override async Task OnInitializedAsync() 
        => _features = await _httpClient.GetFromJsonAsync<List<GetFeatureModel>>($"/api/v1/solutions/{SolutionId}/features");

    private async Task HandleValidSubmit()
    {
        var response = await _httpClient.PostAsJsonAsync($"/api/v1/solutions/{SolutionId}/components", _model);
        if(response.IsSuccessStatusCode)
            _navigationManager.NavigateTo($"/solutions/{SolutionId}");
    }
}