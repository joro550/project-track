@page "/"

<h1>Welcome to NoGirra</h1>
<p>
    Firstly let me mention that this project is (and will probrably always be) a <b>prototype</b>
</p> 

<h2>What is this?</h2>
<p>
    Let me explain explain what I am trying to do with this project, and maybe you can help.<br/><br/>
    
    There are a large amount of project management tools available for businesses these days, 
    I am not going to mention them by name - but you probably know the ones I'm talking about.<br/><br/>
    
    From what I've seen all of the project management tools tackle the problem in the same way, 
    you are probably familier with this view:
</p>

<BackLog/>

<p>
    And if you have certain other project management tools this view probably looks a little 
    too familier also:
</p>

<KanbanBoard />

<p>
    I am going to make a brave statement about this approach and then I will try my best to back up 
    my claim and then offer and alternative (this project), I just want to stress that this is one -
    of what is probably many variations on the same problem space
</p>

<p>
    <q>I don't think the current project managment tools work for software development</q>
</p>

<p>
    let me quickly say that, yes, you can <i>make them work</i> but you have to force a 
    square peg into a triangle hole and it's not fitting.
</p>

<h2>
    Issues with current platforms
</h2>
<hr/>

<h3>
    What is the definition of done?
</h3>

<p>
    
</p>


<h3>
    Cards disappear
</h3>

<p>
    
</p>


<h3>
    What is included in the current version?
</h3>

<p>
    
</p>

<h3>
    What is the overall goal of this card?
</h3>

<p>
    
</p>


<hr/>
<h2>An alternative</h2>

<p>
    What I have tried to create here is an alternative way of managing software projects.<br/><br/>
    
    Before we continute lets just define some terms that are used in NoGirra:
</p>

<table class="table">
    <thead>
    <tr>
        <td>Word</td>
        <td>How it is used</td>
    </tr>
    </thead>
    <tbody>
    <tr>
        <td>Solution</td>
        <td></td>
    </tr>
        
    <tr>
        <td>Branch</td>
        <td></td>
    </tr>
        
    <tr>
        <td>Card</td>
        <td></td>
    </tr>
        
            
    <tr>
        <td>Component</td>
        <td></td>
    </tr>
        
        
    <tr>
        <td>Feature</td>
        <td></td>
    </tr>
        
        
    <tr>
        <td>Version</td>
        <td></td>
    </tr>
    </tbody>
</table>

<p>
    NoGirra bases everything off of a <i>solution</i> it creates a deafult <i>branch</i>,
    which is currently defaulting to "main" - from here you can specify all of the <i>components</i>
    and <i>features</i> that relate to that <i>solution</i>. <br/><br/>
    
    When a piece of work has been identified we can create a <i>card</i>, once we have created a <i>card</i>
    we need to assign it to a <i>branch</i>, a <i>branch</i> can have one or more <i>cards</i> assigned to it. <br/><br/>
    
    Once all of the cards have been through (insert your process here) we can then close the branch, this 
    will move all of the <i>Cards</i> from that <i>branch</i> to it's parent <i>branch</i> (the main <i>branch</i> by default).<br/><br/>
    
    From here we can create a <i>version</i> once we create a <i>version</i> then all the <i>cards</i> that are assigned to the 
    default <i>branch</i> will be assigned to that <i>version</i> and will not show on the <i>branch</i> interface but will appear on the
    <i>version</i> interface.
</p>

<p>
    This may sound a little complicated but I believe it follows the software development process where a branch (in an SCM) is created
    off the bac  of an issue (or multiple issues) all the commits are assigned against that branch, until you are comfortable merging that
    work into the main line branch where it is then put into a release (a version).
</p>